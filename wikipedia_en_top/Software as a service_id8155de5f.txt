Software as a service
Software as a service (SaaS /sæs/) is a software licensing and delivery model in which software is licensed on a subscription basis and is centrally hosted. SaaS is also known as "on-demand software" and Web-based/Web-hosted software.
SaaS is considered to be part of cloud computing, along with infrastructure as a service (IaaS), platform as a service (PaaS), desktop as a service (DaaS), managed software as a service (MSaaS), mobile backend as a service (MBaaS), data center as a service (DCaaS), integration platform as a service (iPaaS), and information technology management as a service (ITMaaS).
SaaS apps are typically accessed by users of a web browser (a thin client). SaaS became a common delivery model for many business applications, including office software, messaging software, payroll processing software, DBMS software, management software, CAD software, development software, gamification, virtualization, accounting, collaboration, customer relationship management (CRM), management information systems (MIS), enterprise resource planning (ERP), invoicing, field service management, human resource management (HRM), talent acquisition, learning management systems, content management (CM), geographic information systems (GIS), and service desk management.
SaaS has been incorporated into the strategy of nearly all enterprise software companies.
History
Centralized hosting of business applications dates back to the 1960s. Starting in that decade, IBM and other mainframe computer providers conducted a service bureau business, often referred to as time-sharing or utility computing. Such services included offering computing power and database storage to banks and other large organizations from their worldwide data centers.
The expansion of the Internet during the 1990s brought about a new class of centralized computing, called application service providers (ASP). ASPs provided businesses with the service of hosting and managing specialized business applications to reduce costs through central administration and the provider's specialization in a particular business application. Two of the largest ASPs were USI, which was headquartered in the Washington, DC area, and Futurelink Corporation, headquartered in Irvine, California.
Software as a service essentially extends the idea of the ASP model. The term software as a service (SaaS), however, is commonly used in more specific settings:
The acronym first appeared in the goods and services description of a USPTO trademark, filed on September 23, 1985. DbaaS (Database as a service) has emerged as a sub-variety of SaaS and is a type of cloud database.
Microsoft referred to SaaS as "software plus services" for a few years.
Distribution and pricing
The cloud (or SaaS) model has no physical need for indirect distribution because it is not distributed physically and is deployed almost instantaneously, thereby negating the need for traditional partners and middlemen. Unlike traditional software, which is conventionally sold as a perpetual license with an up-front cost (and an optional ongoing support fee), SaaS providers generally price applications using a subscription fee, most commonly a monthly fee or an annual fee. Consequently, the initial setup cost for SaaS is typically lower than the equivalent enterprise software. SaaS vendors typically price their applications based on some usage parameters, such as the number of users using the application. However, because in a SaaS environment customers' data reside with the SaaS vendor, opportunities also exist to charge per transaction, event, or other units of value, such as the number of processors required.
The relatively low cost for user provisioning (i.e., setting up a new customer) in a multi-tenant environment enables some SaaS vendors to offer applications using the freemium model. In this model, a free service is made available with limited functionality or scope, and fees are charged for enhanced functionality or larger scope.
A key driver of SaaS growth is SaaS vendors' ability to provide a price that is competitive with on-premises software. This is consistent with the traditional rationale for outsourcing IT systems, which involves applying economies of scale to application operation, i.e., an outside service provider may be able to offer better, cheaper, more reliable applications.
Architecture
Most SaaS providers offer a multi-tenant architecture. With this model, a single version of the application, with a single configuration (hardware, network, operating system), is used for all customers ("tenants"). To support scalability, the application can be installed on multiple machines (called horizontal scaling). In some cases, a second version of the application is set up to offer a select group of customers access to pre-release versions of the applications (e.g., a beta version) for testing purposes. This is contrasted with traditional software, where multiple physical copies of the software — each potentially of a different version, with a potentially different configuration, and often customized — are installed across various customer sites.
Although an exception rather than the norm, some SaaS providers use mechanisms such as virtualization to manage a large number of customers in place of multi-tenancy. Whether multi-tenancy is a necessary component for software as a service is debatable.
Vertical vs horizontal SaaS
Horizontal SaaS and vertical SaaS are different models of cloud computing services. Horizontal SaaS targets a broad variety of customers, generally without regard to their industry. Some popular examples of horizontal SaaS vendors are Salesforce and HubSpot. Vertical SaaS, on the other hand, refers to a niche market targeting a narrower variety of customers to meet their specific requirements.
Characteristics
Although not all software-as-a-service applications share all the following traits, the characteristics below are common among many of them:
Accelerated feature delivery
SaaS applications are often updated more frequently than traditional software, in many cases on a weekly or monthly basis. This is enabled by several factors:
Accelerated feature delivery is further enabled by agile software development methodologies. Such methodologies, which have evolved in the mid-1990s, provide a set of software development tools and practices to support frequent software releases.
Open integration protocols
SaaS applications predominantly offer integration protocols and application programming interfaces (APIs) that operate over a wide area network.
The ubiquity of SaaS applications and other Internet services and the standardization of their API technology has spawned the development of mashups, which are lightweight applications that combine data, presentation, and functionality from multiple services, creating a compound service. Mashups further differentiate SaaS applications from on-premises software as the latter cannot be easily integrated outside a company's  firewall.
Collaborative (and "social") functionality
Inspired by the development of the different internet networking services and the so-called web 2.0 functionality, many SaaS applications offer features that let their users collaborate and share information.
For example, many project management applications delivered in the SaaS model offer—in addition to traditional project planning functionality—collaboration features letting users comment on tasks and plans and share documents within and outside an organization. Several other SaaS applications let users vote on and offer new feature ideas.
Although some collaboration-related functionality is also integrated into on-premises software, (implicit or explicit) collaboration between users or different customers is only possible with centrally hosted software.
OpenSaaS
OpenSaaS refers to software as a service (SaaS) based on open-source code. Like SaaS applications, Open SaaS is a web-based application hosted, supported, and maintained by a service provider. While the roadmap for Open SaaS applications is defined by its community of users, upgrades and product enhancements are managed by a central provider. The term was coined in 2011 by Dries Buytaert, creator of the Drupal content management framework.
Andrew Hoppin, a former Chief Information Officer for the New York State Senate, has been a vocal advocate of OpenSaaS for government, calling it "the future of government innovation." He points to WordPress and Why Unified as a successful example of an OpenSaaS software delivery model that gives customers "the best of both worlds, and more options. The fact that it is open source means that they can start building their websites by self-hosting WordPress and customizing their website to their heart’s content. Concurrently, the fact that WordPress is SaaS means that they don’t have to manage the website at all -- they can simply pay WordPress.com to host it."
Adoption drivers
Several important changes to the software market and technology landscape have facilitated the acceptance and growth of SaaS:
Adoption challenges
Some limitations slow down the acceptance of SaaS and prohibit it from being used in some cases:
The standard model also has limitations:
Healthcare applications
According to a survey by the Healthcare Information and Management Systems Society, 83% of US IT healthcare organizations are now using cloud services, with 9.3% planning to, whereas 67% of IT healthcare organizations are currently running SaaS-based applications.
Data escrow
Software as a service data escrow is the process of keeping a copy of critical software-as-a-service application data with an independent third party. Similar to source code escrow, where critical software source code is stored with an independent third party, SaaS data escrow applies the same logic to the data within a SaaS application. It allows companies to protect and ensure all the data that resides within SaaS applications, protecting against data loss.
There are many and varied reasons for considering SaaS data escrow, including concerns about vendor bankruptcy, unplanned service outages, and potential data loss or corruption. 
Many businesses either ensure that they are complying with their data governance standards or try to enhance their reporting and business analytics against their SaaS data.
Criticism
One notable criticism of SaaS comes from Richard Stallman of the Free Software Foundation, who refers to it as Service as a Software Substitute (SaaSS). He considers the use of SaaSS to be a violation of the principles of free software. According to Stallman: