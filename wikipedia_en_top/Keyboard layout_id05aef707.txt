Keyboard layout
A keyboard layout is any specific physical, visual or functional arrangement of the keys, legends, or key-meaning associations (respectively) of a computer keyboard, mobile phone, or other computer-controlled typographic keyboard. 
Physical layout is the actual positioning of keys on a keyboard. Visual layout is the arrangement of the legends (labels, markings, engravings) that appear on those keys. Functional layout is the arrangement of the key-meaning association or keyboard mapping, determined in software, of all the keys of a keyboard; it is this (rather than the legends) that determines the actual response to a key press.
Modern computer keyboards are designed to send a scancode to the operating system (OS) when a key is pressed or released: this code reports only the key's row and column, not the specific character engraved on that key. The OS converts the scancode into a specific binary character code using a "scancode to character" conversion table, called the keyboard mapping table. This means that a physical keyboard may be dynamically mapped to any layout without switching hardware components—merely by changing the software that interprets the keystrokes. Often, a user can change keyboard mapping in system settings. In addition, software may be available to modify or extend keyboard functionality. Thus the symbol shown on the physical key-top need not be the same as appears on the screen or goes into a document being typed. Some settings enable the user to type supplementary symbols which are not engraved on the keys used to invoke them. Modern USB keyboards are plug and play; they communicate their (default) visual layout to the OS when connected (though the user is still able to reset this at will).
Key types
A computer keyboard consists of alphanumeric or character keys for typing, modifier keys for altering the functions of other keys, navigation keys for moving the text cursor on the screen, function keys and system command keys—such as Esc and Break—for special actions, and often a numeric keypad to facilitate calculations.
There is some variation between different keyboard models in the physical layout—i.e., how many keys there are and how they are positioned on the keyboard. However, differences between national layouts are mostly due to different selections and placements of symbols on the character keys.
Character keys
The core section of a keyboard consists of character keys, which can be used to type letters and other characters. Typically, there are three rows of keys for typing letters and punctuation, an upper row for typing digits and special symbols, and the Space bar on the bottom row. The positioning of the character keys is similar to the keyboard of a typewriter.
Modifier keys
Besides the character keys, a keyboard incorporates special keys that do nothing by themselves but modify the functions of other keys. For example, the ⇧ Shift key can be used to alter the output of character keys, whereas the Ctrl (control), Alt (alternate) and AltGr (alternative graphic) keys trigger special operations when used in concert with other keys. (Apple keyboards have differently labelled but equivalent keys, see below).
Typically, a modifier key is held down while another key is struck. To facilitate this, modifier keys usually come in pairs, one functionally identical key for each hand, so holding a modifier key with one hand leaves the other hand free to strike another key.
An alphanumeric key labelled with only a single letter (usually the capital form) can generally be struck to type either a lower case or capital letter, the latter requiring the simultaneous holding of the ⇧ Shift key. The ⇧ Shift key is also used to type the upper of two symbols engraved on a given key, the lower being typed without using the modifier key.
The Latin alphabet keyboard has a dedicated key for each of the letters A–Z, keys for punctuation and other symbols, usually a row of function keys, often a numeric keypad and some system control keys. In most languages except English, additional letters (some with diacritics) are required and some are present as standard on each national keyboard, as appropriate for its national language. These keyboards have another modified key, labelled AltGr (alternative graphic), to the right of the space-bar. (US keyboards just have a second Alt key in this position). It can be used to type an extra symbol in addition to the two otherwise available with an alphanumeric key, and using it simultaneously with the ⇧ Shift key usually gives access to a fourth symbol. These third-level and fourth-level symbols may be engraved on the right half of the key top, or they may be unmarked.  Cyrillic alphabet and Greek alphabet keyboards have similar arrangements.
Instead of the Ctrl, Alt and AltGr keys seen on commodity keyboards, Apple Keyboards have ⌘ Cmd (command) and ⌥ Option keys. The ⌥ Option key is used much like the AltGr, and the ⌘ Cmd key like the Ctrl and Alt, to access menu options and shortcuts. Macs have a Ctrl key for compatibility with programs that expect a more traditional keyboard layout. It is especially useful when using a terminal, X11 (a Unix environment included with OS X as an install option) or MS Windows. The key can generally be used to produce a secondary mouse click as well. There is also a Fn key on modern Mac keyboards, which is used for switching between use of the F1, F2, etc. keys either as function keys or for other functions like media control, accessing Spotlight, controlling the volume, or handling Mission Control. Fn key can be also found on smaller Windows and Linux laptops and tablets, where it serves a similar purpose.
Many Unix workstations (and also home computers like the Amiga) keyboards placed the Ctrl key to the left of the letter A, and the ⇪ Caps Lock key in the bottom left. This position of the Ctrl key is also used on the XO laptop, which does not have a ⇪ Caps Lock. The UNIX keyboard layout also differs in the placement of the Esc key, which is to the left of 1.
Some early keyboards experimented with using large numbers of modifier keys. The most extreme example of such a keyboard, the so-called "space-cadet keyboard" found on MIT LISP machines, had no fewer than seven modifier keys: four control keys, Ctrl, Meta, Hyper, and Super, along with three shift keys, ⇧ Shift, Top, and Front. This allowed the user to type over 8000 possible characters by playing suitable "chords" with many modifier keys pressed simultaneously.
Dead keys
A dead key is a special kind of a modifier key that, instead of being held while another key is struck, is pressed and released before the other key. The dead key does not generate a character by itself, but it modifies the character generated by the key struck immediately after, typically making it possible to type a letter with a specific diacritic. For example, on some keyboard layouts, the grave accent key ` is a dead key: in this case, striking ` and then A results in à (a with grave accent); ` followed by ⇧ Shift+E results in È (E with grave accent). A grave accent in isolated form can be typed by striking ` and then Space bar.
A key may function as a dead key by default, or sometimes a normal key can temporarily be altered to function as a dead key by simultaneously holding down the secondary-shift key—AltGr or ⌥ Option: a typical example might be AltGr+6 a will produce â (assuming the "6" key is also the "^" key). In some systems, there is no indication to the user that a dead key has been struck, so the key appears dead, but in some text-entry systems the diacritical mark is displayed along with an indication that the system is waiting for another keystroke: either the base character to be marked, an additional diacritical mark, or Space bar to produce the diacritical mark in isolation.
Compared with the secondary-shift modifier key, the dead-key approach may be a little more complicated, but it allows more additional letters. Using AltGr, only one or (if used simultaneously with the normal shift key) two additional letters with each key, whereas using a dead key, a specific diacritic can be attached to a range of different base letters.
Compose key
A Compose key can be characterized as a generic dead key that may in some systems be available instead of or in addition to the more specific dead keys. It allows access to a wide range of predefined extra characters by interpreting a whole sequence of keystrokes following it. For example, striking Compose followed by ' (apostrophe) and then A results in á (a with acute accent), Compose followed by A and then E results in æ (ae ligature), and Compose followed by O and then C results in © (circled c, copyright symbol).
The Compose key is supported by the X Window System (used by most Unix-like operating systems, including most Linux distributions). Some keyboards have a key labeled "Compose", but any key can be configured to serve this function. For example, the otherwise redundant right-hand ⊞ Win key may, when available, be used for this purpose. This can be emulated in Windows with third party programs, for example WinCompose.
System command keys
Depending on the application, some keyboard keys are not used to enter a printable character but instead are interpreted by the system as a formatting, mode shift, or special commands to the system.  The following examples are found on personal computer keyboards.
SysRq and PrtSc
The system request (SysRq) and print screen (PrtSc or on some keyboards e.g. PrtScn) commands often share the same key. SysRq was used in earlier computers as a "panic" button to recover from crashes (and it is still used in this sense to some extent by the Linux kernel; see Magic SysRq key). The print screen command used to capture the entire screen and send it to the printer, but in the present it usually puts a screenshot in the clipboard.
Break key
The Break key/Pause key no longer has a well-defined purpose. Its origins go back to teleprinter users, who wanted a key that would temporarily interrupt the communications line. The Break key can be used by software in several different ways, such as to switch between multiple login sessions, to terminate a program, or to interrupt a modem connection.
In programming, especially old DOS-style BASIC, Pascal and C, Break is used (in conjunction with Ctrl) to stop program execution. In addition to this, Linux and variants, as well as many DOS programs, treat this combination the same as Ctrl+C. On modern keyboards, the break key is usually labeled Pause/Break. In most Microsoft Windows environments, the key combination WindowsPause brings up the system properties.
Escape key
The escape key (often abbreviated Esc) "nearly all of the time" signals Stop QUIT let me "get out of a dialog" (or pop-up window):.
Another common application today of the Esc key is to trigger the Stop button in many web browsers.
ESC was part of the standard keyboard of the Teletype Model 33 (introduced in 1964 and used with many early minicomputers). The DEC VT50, introduced July 1974, also had an Esc key. The TECO text editor (c. 1963) and its descendant Emacs (c. 1985) use the Esc key extensively.
Historically it also served as a type of shift key, such that one or more following characters were interpreted differently, hence the term escape sequence, which refers to a series of characters, usually preceded by the escape character.
On machines running Microsoft Windows, prior to the implementation of the Windows key on keyboards, the typical practice for invoking the "start" button was to hold down the control key and press escape. This process still works in Windows 95, 98, Me, NT 4, 2000, XP, Vista, 7, 8, and 10.
Enter key
An "enter" key may terminate a paragraph of text and advance an editing cursor to the start of the next available line, similar to the "carriage return" key of a typewriter. When the attached system is processing a user command line, pressing "enter" may signal that the command has been completely entered and that the system may now process it.
Shift key
Shift key: when one presses shift and a letter, it will capitalize the letter pressed with the shift key. Another use is to type more symbols than appear to be available, for instance the semi-colon key is accompanied with a colon symbol on the top. To type a semi-colon, the key is pressed without pressing any other key. To type a colon, both this key and the Shift key are pressed concurrently. (Some systems make provision for users with mobility impairment by allowing the Shift key to be pressed first and then the desired symbol key).
Menu key, Command key, Windows key
The Menu key or Application key is a key found on Windows-oriented computer keyboards: on Apple keyboard the same function is provided by the Command key (labelled ⌘). It is used to launch a context menu with the keyboard rather than with the usual right mouse button. The key's symbol is usually a small icon depicting a cursor hovering above a menu. On some Samsung keyboards the cursor in the icon is not present, showing the menu only.  This key was created at the same time as the Windows key. This key is normally used when the right mouse button is not present on the mouse. Some Windows public terminals do not have a Menu key on their keyboard to prevent users from right-clicking (however, in many Windows applications, a similar functionality can be invoked with the Shift+F10 keyboard shortcut).
The Windows key opens the 'Start' (applications) menu.
History
Keyboard layouts have evolved over time, usually alongside major technology changes. Particularly influential have been: the Sholes and Glidden typewriter (1874, also known as Remington No. 1), the first commercially successful typewriter, which introduced QWERTY; its successor, the Remington No. 2 (1878), which introduced the shift key; the IBM Selectric (1961), a very influential electric typewriter, which was imitated by computer keyboards; and the IBM PC (1981), namely the Model M (1985), which is the basis for many modern keyboard layouts.
Within a community, keyboard layout is generally quite stable, due to the high training cost of touch-typing, and the resulting network effect of having a standard layout and high switching cost of retraining, and the suboptimal QWERTY layout is a case study in switching costs. Nevertheless, significant market forces can result in changes (as in Turkish adoption of QWERTY), and non-core keys are more prone to change, as they are less frequently used and less subject to the lock-in of touch-typing. The main, alphanumeric portion is typically stable, while symbol keys and shifted key values change somewhat, modifier keys more so, and function keys most of all: QWERTY dates to the No. 1 (1874) (though 1 and 0 were added later), shifted keys date in some cases to the No. 2 (1878), in other cases to the Selectric (1961), and modifier key placement largely dates to the Model M (1985); function key placement typically dates to the Model M, but varies significantly, particularly on laptops.
The earliest mechanical keyboards were used in musical instruments to play particular notes. With the advent of the printing telegraph, a keyboard was needed to select characters. Some of the earliest printing telegraph machines either used a piano keyboard outright or else a layout similar to a piano keyboard. The Hughes-Phelps printing telegraph piano keyboard laid keys A-N in left-to-right order on the black piano keys, and keys O-Z in right-to-left order on the white piano keys below.
In countries using the Latin script, the center, alphanumeric portion of the modern keyboard is most often based on the QWERTY design by Christopher Sholes. Sholes' layout was long thought to have been laid out in such a way that common two-letter combinations were placed on opposite sides of the keyboard so that his mechanical keyboard would not jam. However, evidence for this claim has often been contested. In 2012, an argument was advanced by two Japanese historians of technology showing that the key order on the earliest Sholes prototypes in fact followed the left-right and right-left arrangement of the contemporary Hughes-Phelps printing telegraph, described above. Later iterations diverged progressively for various technical reasons, and strong vestiges of the left-right A-N, right-left O-Z arrangement can still be seen in the modern QWERTY layout. Sholes' chief improvement was thus to lay out the keys in rows offset horizontally from each other by three-eighths, three-sixteenths, and three-eighths inches to provide room for the levers and to reduce hand-movement distance. Although it has been demonstrated that the QWERTY layout is not the most efficient layout for typing, it remains the standard.
Sholes chose the size of the keys to be on three-quarter [3⁄4, or 0.75] inch centers (about 19 mm, versus musical piano keys which are 23.5 mm or about 0.93 inches wide). 0.75 inches has turned out to be optimum for fast key entry by the average size hand, and keyboards with this key size are called "full-sized keyboards".
On a manual typewriter, the operator could press the key down with a lighter touch for such characters as the period or comma, which did not occupy as much area on the paper. Since an electric typewriter supplied the force to the typebar itself after the typist merely touched the key, the typewriter itself had to be designed to supply different force for different characters. To simplify this, the most common layout for electric typewriters in the United States differed from that for the one most common on manual typewriters. Single-quote and double-quote, instead of being above the keys for the digits 2 and 8 respectively, were placed together on a key of their own. The underscore, another light character, replaced the asterisk above the hyphen.
The ASCII communications code was designed so that characters on a mechanical teletypewriter keyboard could be laid out in a manner somewhat resembling that of a manual typewriter. This was imperfect, as some shifted special characters were moved one key to the left, as the number zero, although on the right, was low in code sequence. Later, when computer terminals were designed from less expensive electronic components, it was not necessary to have any bits in common between the shifted and unshifted characters on a given key. This eventually led to standards being adopted for the "bit-pairing" and "typewriter-pairing" forms of keyboards for computer terminals.
The typewriter-pairing standard came under reconsideration, on the basis that typewriters have many different keyboard arrangements. The U.S. keyboard for the IBM PC, although it resembles the typewriter-pairing standard in most respects, differs in one significant respect: the braces are on the same two keys as the brackets, as their shifts. This innovation predated the IBM Personal Computer by several years.
IBM adopted the 101/102 key layout on the PS/2 in 1987 (after previously using an 84-key keyboard which did not have separate cursor and numeric key pads).
Most modern keyboards basically conform to the layout specifications contained in parts 1, 2, and 5 of the international standard series ISO/IEC 9995. These specifications were first defined by the user group at AFNOR in 1984 working under the direction of Alain Souloumiac. Based on this work, a well known ergonomic expert wrote a report which was adopted at the ISO Berlin meeting in 1985 and became the reference for keyboard layouts.
The 104/105-key PC keyboard was born when two ⊞ Win keys and a ≣ Menu key were added on the bottom row (originally for the Microsoft Windows operating system). Newer keyboards may incorporate even further additions, such as Internet access (World Wide Web navigation) keys and multimedia (access to media players) buttons.
Physical, visual, and functional layouts
As noted before, the layout of a keyboard may refer to its physical (arrangement of keys), visual (physical labeling of keys), or functional (software response to a key press or release) layout.
Physical layouts
Physical layouts only address tangible differences among keyboards. When a key is pressed, the keyboard does not send a message such as the A-key is depressed but rather the left-most main key of the home row is depressed. (Technically, each key has an internal reference number, the scan code, and these numbers are what is sent to the computer when a key is pressed or released.) The keyboard and the computer each have no information about what is marked on that key, and it could equally well be the letter A or the digit 9. Historically, the user of the computer was requested to identify the functional layout of the keyboard when installing or customizing the operating system. Modern USB keyboards are plug and play; they communicate their visual layout to the OS when connected (though the user is still able to reset this at will).
Today, most keyboards use one of three different physical layouts, usually referred to as simply ISO (ISO/IEC 9995-2), ANSI (ANSI-INCITS 154-1988), and JIS (JIS X 6002-1980), referring roughly to the organizations issuing the relevant worldwide, United States, and Japanese standards, respectively. (In fact, the physical layouts referred such as "ISO" and "ANSI" comply to the primary recommendations in the named standards, while each of these standards in fact also allows the other.) Keyboard layout in this sense may refer either to this broad categorization or to finer distinctions within these categories. For example, as of May 2008, Apple Inc produces ISO, ANSI, and JIS desktop keyboards, each in both extended and compact forms. The extended keyboards have 110, 109, and 112 keys (ISO, ANSI, and JIS, respectively), and the compact models have 79, 78, and 80.
Visual layouts
The visual layout includes the symbols printed on the physical keycaps. Visual layouts vary by language, country, and user preference, and any one physical and functional layout can be employed with a number of different visual layouts. For example, the "ISO" keyboard layout is used throughout Europe, but typical French, German, and UK variants of physically identical keyboards appear different because they bear different legends on their keys. Even blank keyboards—with no legends—are sometimes used to learn typing skills or by user preference.
Some users choose to attach custom labels on top of their keycaps. This can be, e.g., for masking foreign layouts, adding additional information such as shortcuts, learning aid, gaming controls, or solely for decorational purposes.
Functional layouts
The functional layout of the keyboard refers to the mapping between the physical keys, such as the A key, and software events, such as the letter "A" appearing on the screen. Usually the functional layout is set (in the system configuration) to match the visual layout of the keyboard being used, so that pressing a key will produce the expected result, corresponding to the legends on the keyboard. However, most operating systems have software that allow the user to easily switch between functional layouts, such as the language bar in Microsoft Windows. For example, a user with a Swedish keyboard who wishes to type more easily in German may switch to a functional layout intended for German—without regard to key markings—just as a Dvorak touch typist may choose a Dvorak layout regardless of the visual layout of the keyboard used.
Customized functional layouts
Functional layouts can be redefined or customized within the operating system, by reconfiguring operating system keyboard driver, or with a use of a separate software application. Transliteration is one example of that whereby letters in other language get matched to visible Latin letters on the keyboard by the way they sound. Thus, a touch typist can type various foreign languages with a visible English-language keyboard only.
Mixed hardware-to-software keyboard extensions exist to overcome above discrepancies between functional and visual layouts. A keyboard overlay is a plastic or paper masks that can be placed over the empty space between the keys, providing the user with the functional use of various keys. Alternatively, a user applies keyboard stickers with an extra imprinted language alphabet and adds another keyboard layout via language support options in the operating system. The visual layout of any keyboard can also be changed by simply replacing its keys or attaching labels to them, such as to change an English-language keyboard from the common QWERTY to the Dvorak layout, although for touch typists, the placement of the tactile bumps on the home keys is of more practical importance than that of the visual markings.
In the past, complex software that mapped many non-standard functions to the keys (such as a flight simulator) would be shipped with a "keyboard overlay", a large sheet of paper with pre-cut holes matching the key layout of a particular model of computer. When placed over the keyboard, the overlay provided a quick visual reference as to what each key's new function was, without blocking the keys or permanently modifying their appearance. The overlay was often made from good-quality laminated paper and was designed to fold up and fit in the game's packaging when not in use.
National variants
The U.S. IBM PC keyboard has 104 keys, while the PC keyboards for most other countries have 105 keys. In an operating system configured for a non-English language, the keys are placed differently. For example, keyboards designed for typing in Spanish have some characters shifted, to make room for Ñ/ñ; similarly those for French or Portuguese may have a special key for the character Ç/ç. Keyboards designed for Japanese may have special keys to switch between Japanese and Latin scripts, and the character ¥ (Japanese yen or Chinese yuan currency symbol) instead of \ (backslash, which may be replaced by the former in some codepages). Using a keyboard for alternative languages leads to a conflict: the image on the key does not correspond to the character. In such cases, each new language may require an additional label on the key, because the standard keyboard layouts do not even share similar characters of different languages.
The United States keyboard layout is used as default in some Linux distributions.
Most operating systems allow switching between functional keyboard layouts, using a key combination involving register keys that are not used for normal operations (e.g. Microsoft reserve Alt+⇧ Shift or Ctrl+⇧ Shift register control keys for sequential layout switching; those keys were inherited from old DOS keyboard drivers). There are keyboards with two parallel sets of characters labeled on the keys, representing alternate alphabets or scripts. It is also possible to add a second set of characters to a keyboard with keyboard stickers manufactured by third parties.
Size variation
Modern keyboard models contain a set number of total keys according to their given standard, described as 104, 105, etc., and sold as "full-size" keyboards. This number is not always followed, and individual keys or whole sections are commonly skipped for the sake of compactness or user preference. Consequently, generic keyboard mappings may not be completely effective on unusual layouts.
Latin-script keyboard layouts
Although there are a large number of keyboard layouts used for languages written with Latin-script alphabets, most of these layouts are quite similar. They can be divided into three main families according to where the A, M, Q, W, Y and Z keys are placed on the keyboard. These layouts are usually named after the first six letters on the first row: AZERTY, QWERTY, QWERTZ, QZERTY and national variants thereof.
While the central area of the keyboard, the alphabetic section, remains fairly constant, and the numbers from 1–9 are almost invariably on the row above, keyboards may differ in:
The physical keyboard is of the basic ISO, ANSI, or JIS type; pressing a key sends a scan code to the operating-system or other software, which in turn determines the character to be generated: this arrangement is known as the keyboard mapping. It is customary for keyboards to be engraved appropriately to the local default mapping. For example, when the ⇧ Shift and numeric 2 keys are pressed simultaneously on a US keyboard; "@" is generated, and the key is engraved appropriately. On a UK keyboard this key combination generates the double-quote character, and UK keyboards are so engraved.
In the keyboard charts listed below, the primary letters or characters available with each alphanumeric key are often shown in black in the left half of the key, whereas characters accessed using the AltGr key appear in blue in the right half of the corresponding key. Symbols representing dead keys usually appear in red.
QWERTY
The QWERTY layout is, by far, the most widespread layout in use, and the only one that is not confined to a particular geographical area. In some territories, keys like ↵ Enter and ⇪ Caps Lock are not translated to the language of the territory in question. In other varieties such keys have been translated, like ↵ Intro and ⇪ Bloq Mayús, on Spanish computer keyboards respectively for the example above. On Macintosh computers these keys are usually just represented by symbols without the word "Enter", "Shift", "Command", "Option/Alt" or "Control", with the exception of keyboards distributed in the US and East Asia.
QÜERTY (Azerbaijani)
Azerbaijani keyboards use a layout known as QÜERTY, where Ü appears in place of W above S, with W not being accessible at all. It is supported by Microsoft Windows.
ÄWERTY (Turkmen)
Turkmen keyboards use a layout known as ÄWERTY, where Ä appears in place of Q above A, Ü appears in place of X below S, Ç appears in place of C, and Ý appears in place of V, with C, Q, V, and X not being accessible at all. It is supported by Microsoft Windows (Vista and later only).
QWERTZ


The QWERTZ layout is the normal keyboard layout in Germany, Austria and Switzerland. It is also fairly widely used in Czechia, Slovakia and other parts of Central Europe. The main difference between it and QWERTY is that Y and Z are swapped, and some special characters such as brackets are replaced by diacritical characters like Ä, Ö, Ü, ß. In Czechia and Slovakia diacritical characters like Ě, Š, Č, Ř, Ž, Ý, Á, Í also replace numbers. Caps lock can be a shift lock as in AZERTY (see below).
AZERTY
The AZERTY layout is used in France, Belgium, and some African countries. It differs from the QWERTY layout thus:
ĄŽERTY (Lithuanian)
As standardized in LST 1582, Lithuanian keyboards have a defined layout known as ĄŽERTY, where Ą appears in place of Q above A, Ž in place of W above S, and Ū in place of X below S, with Q, W, and X being available either on the far right-hand side or by use of the AltGr key. However instead of ĄŽERTY, the Lithuanian QWERTY keyboard is universally used.

QZERTY
The QZERTY layout was used mostly in Italy, where it was the traditional typewriter layout. In recent years, however, a modified QWERTY layout with stressed keys such as à, è, ò, has gained widespread usage throughout Italy. Computer keyboards usually have QWERTY, although non-alphanumeric characters vary.
Apple supported QZERTY layout in its early Italian keyboards, and currently iPod Touch also has it available.
Sámi Extended
Sámi keyboards use a layout known as the Sámi Extended, where Á appears in place of Q above A, Š appears in place of W above S, Č appears in place of X to the left of C, and Ŧ appears in place of Y to the right of T, with Q, W, X, and Y being available by use of the AltGr key. Also, Å is to the right of P (to match the Norwegian and Swedish/Finnish keyboards), Ŋ is to the right of Å, and Đ is to the right of Ŋ. It is different in Norway than in Sweden and Finland, because of the placement of the letters different between Norwegian and Swedish/Finnish (Ä, Æ, Ö, and Ø), which are placed where they match the standard keyboard for the main language spoken in the country. It is supported by Microsoft Windows (Windows XP SP2 and later only). Microsoft Windows also has Swedish with Sami, Norwegian with Sami and Finnish with Sami layouts, which match the normal Swedish, Norwegian, or Finnish keyboards, but has additional Sami characters as AltGr-combinations.
Other Latin-script keyboard layouts
There are also keyboard layouts that do not resemble traditional typewriter layouts very closely, if at all. These are designed to reduce finger movement and are claimed by some proponents to offer higher typing speed along with ergonomic benefits.
Dvorak
The Dvorak layout was named after its inventor, August Dvorak. There are also numerous adaptations for languages other than English, and single-handed variants. Dvorak's original layout had the numerals rearranged, but the present-day layout has them in numerical order. Dvorak has numerous properties designed to increase typing speed, decrease errors, and increase comfort. Research has found a 4% average advantage to the end user in typing speed. The layout concentrates the most used English letters in the home row where the fingers rest, thus having 70% of typing done in the home row (compared to 32% in QWERTY).


The Dvorak layout is available out-of-the-box on most operating systems, making switching through software very easy. "Hardwired" Dvorak keyboards are also available, though only from specialized hardware companies.
Colemak
The Colemak layout is another popular alternative to the standard QWERTY layout, offering a more familiar change for users already accustomed to the standard layout.
It builds upon the QWERTY layout as a base, changing the positions of 17 keys while retaining the QWERTY positions of most non-alphabetic characters and many popular keyboard shortcuts, supposedly making it easier to learn than Dvorak for people who already type in QWERTY without sacrificing efficiency. It shares several design goals with the Dvorak layout, such as minimizing finger path distance and making heavy use of the home row. An additional defining (albeit optional) feature of the Colemak layout is the lack of a caps lock key; an additional backspace key occupies the position typically occupied by Caps Lock on modern keyboards.
Operating systems such as macOS, Linux, Android, ChromeOS, and BSD allow a user to switch to the Colemak layout. A program to install the layout is available for Microsoft Windows, as well as a portable AutoHotKey implementation.
Colemak variants exist, including Colemak Mod-DH, which seeks to rectify concerns that the layout places too much emphasis on the middle-row centre-column keys (D and H), leading to awkward lateral hand movements for certain common English bigrams such as HE. Others seek to have more compatibility with other keyboard layouts.
Workman
Workman is an English layout supported out-of-the-box in Linux/X11 systems.
The Workman layout employs a hypothesis about the preferential movement of each finger rather than categorically considering the lowest letter row to be least accessible. Specifically, the index finger prefers to curl inwards rather than stretch outwards. So for the index finger, the position of second preference goes to the bottom row rather than the top row. Contrarily, the middle and ring fingers are relatively long and prefer to stretch out rather than curl in. Based on this, weighting is allotted to each key specifically rather than each row generically.
Another principle applied is that it is more natural and less effort to curl in or stretch out fingers rather than rotate
one's wrist inwards or outwards. Thus the Workman layout allots a lower priority to the two innermost columns between the home keys (G and H columns on a QWERTY layout), similarly to the Colemak-DH or "Curl" mods. Workman also balances the load quite evenly between both hands.
The Workman layout is found to achieve overall less travel distance of the fingers for the English language than even Colemak. It does however generally incur higher same-finger n-gram frequencies; or in other words, one finger will need to hit two keys in succession more often than in other layouts.
Other English layouts
There are many other layouts for English, each developed with differing basic principles.
The Norman Layout, like Workman, deprioritizes the central columns but gives more load to the right hand with the assumption that the right hand is more capable than the left. It also gives importance to retaining letters in the same position or at least the same finger as QWERTY.
MTGAP's Layout for a Standard Keyboard / an Ergonomic Keyboard has the lowest finger travel for a standard keyboard, and travel distance for an ergonomic keyboard second only to Arensito keyboard layout.
Further variations were created using the keyboard layout optimizer.
Other layouts lay importance on minimal key deviation from QWERTY to give a reasonable increase in typing speed and ergonomics with minimal relearning of keys.
Qwpr is a layout that changes only 11 basic keys from their QWERTY positions, with only 2 keys typed with different fingers. Minimak has versions which changes four, six, eight, or twelve keys, all have only 3 keys change finger. These intend to offer much of the reduced finger movement of Dvorak without the steep learning curve and with an increased ability to remain proficient with a QWERTY keyboard. The Qwpr layout is also designed for programmers and multilingual users, as it uses Caps Lock as a "punctuation shift", offering quicker access to ASCII symbols and arrow keys, as well as to 15 dead keys for typing hundreds of different glyphs such as accented characters, mathematical symbols, or emoji.
In Canada, the CSA keyboard is designed to write several languages, especially French.
Sholes 2nd Layout
Christopher Latham Sholes, inventor of the QWERTY layout, created his own alternative, and patented it in 1896.
Similar to Dvorak, he placed all the vowels on the home row, but in this case on the right hand. The layout is right-hand biased with both the vowels and many of the most common consonants on the right side of the layout.
JCUKEN (Latin)

The JCUKEN layout was used in the USSR for all computers (both domestically produced and imported such as Japan-made MSX-compatible systems) except IBM-compatible ES PEVM due to its phonetic compatibility with Russian ЙЦУКЕН layout (see right). The layout has the advantage of having punctuation marks on Latin and Cyrillic layouts mapped on the same keys. This Russian Typewriter layout can be found on many Russian typewriters produced before the 1990s, and it is the default Russian keyboard layout in the OpenSolaris operating system.
Neo
The Neo layout is an optimized German keyboard layout developed in 2004 by the Neo Users Group, supporting nearly all Latin-based alphabets, including the International Phonetic Alphabet, the Vietnamese language and some African languages.
The positions of the letters are not only optimized for German letter frequency, but also for typical groups of two or three letters. English is considered a major target as well. The design tries to enforce the alternating usage of both hands to increase typing speed. It is based on ideas from de-ergo and other ergonomic layouts. The high frequency keys are placed in the home row. The current layout, Neo 2.0, has unique features not present in other layouts, making it suited for many target groups such as programmers, mathematicians, scientists or LaTeX authors. Neo is grouped in different layers, each designed for a special purpose.
Most special characters inherit the meaning of the lower layers—the ⟨¿⟩ character is one layer above the ⟨?⟩, or the Greek ⟨α⟩ is above the ⟨a⟩ character. Neo uses a total of six layers with the following general use:
BÉPO
The BÉPO layout is an optimized French keyboard layout developed by the BÉPO community, supporting all Latin-based alphabets of the European Union, Greek and Esperanto. It is also designed to ease programming. It is based on ideas from the Dvorak and other ergonomic layouts. Typing with it is usually easier due to the high frequency keys being in the home row.
Typing tutors exist to ease the transition.
In 2019, a slightly modified version of the BÉPO layout is featured in a French standard developed by AFNOR, along with an improved version of the traditional AZERTY layout.
Dvorak-fr
The Dvorak-fr layout is a Dvorak like layout specific to the French language, without concession to the use of programming languages, and published in 2002 by Francis Leboutte. Version 2 was released in June 2020. Its design meets the need to maximize comfort and prevent risks when typing in French.
Unlike Azerty, the characters needed for good French typography are easily accessible: for example, the quotation marks (« ») and the curved apostrophe are available directly. More than 150 additional characters are available via dead keys.
Turkish (F-keyboard)
The Turkish language uses the Turkish Latin alphabet, and a dedicated keyboard layout was designed in 1955 by İhsan Sıtkı Yener (tr). During its design, letter frequencies in the Turkish language were investigated with the aid of Turkish Language Association. These statistics were then combined with studies on bone and muscle anatomy of the fingers to design the Turkish F-keyboard (Turkish: F klavye). The keyboard provides a balanced distribution of typing effort between the hands: 49% for the left hand and 51% for the right. With this scientific preparation, Turkey has broken 14 world records in typewriting championships between 1957 and 1995. In 2009, Recep Ertaş and in 2011, Hakan Kurt from Turkey came in first in the text production event of the 47th (Beijing) and 48th (Paris) Intersteno congresses respectively. Despite the greater efficiency of the Turkish F-keyboard however, the modified QWERTY keyboard ("Q-keyboard") is the one that is used on most computers in Turkey. The reason for the popularity of QWERTY in Turkey is that they were overwhelmingly imported since the beginning of the 1990s.
ŪGJRMV
The ŪGJRMV layout is specifically designed for the Latvian language.


HCESAR
The HCESAR layout was a layout created in 1937 for typewriters during Portugal's Estado Novo. It was specifically designed for the Portuguese language. It is no longer used.
Malt
The Malt layout—named for its inventor, South African-born Lilian Malt—is best known for its use on molded, ergonomic Maltron keyboards. Nevertheless, it has been adapted as well for flat keyboards, with a compromise involved: a flat keyboard has a single, wide space-bar, rather than a space button as on Maltron keyboards, so the E key was moved to the bottom row.
Archived September 22, 2010, at the Wayback Machine
Modified Blickensderfer
The Blickensderfer typewriter, designed by George Canfield Blickensderfer in 1892, was known for its novel keyboard layout, its interchangeable font, and its suitability for travel. The Blickensderfer keyboard had three banks (rows of keys), with special characters being entered using a separate Shift key; the home row was, uniquely, the bottom one (i.e., the typist kept her hands on the bottom row). A computer or standard typewriter keyboard, on the other hand, has four banks of keys, with home row being second from bottom.
To fit on a Sholes-patterned (typewriter or computer) keyboard, the Blickensderfer layout was modified by Nick Matavka in 2012, and released for both Mac OS X and Windows. To accommodate the differences between Blickensderfer and Sholes keyboards (not the layouts, but the keyboards themselves), the order of the rows was changed and special characters were given their own keys.
The keyboard drivers created by Nick Matavka for the modified Blickensderfer layout (nicknamed the 'Blick') have several variations, including one that includes the option of switching between Blick and another keyboard layout and one that is internationalised, allowing the entry of diacritics.
Hexagon
The honeycomb layout has hexagon keys and was invented by Typewise in cooperation with the ETH Zurich in 2015 for smartphones. It exists for 40+ languages including English, German, Spanish, French and Afrikaans. The keys are arranged like those of the respective traditional keyboard with a few changes. Instead of the Space bar there are two smaller space bars in the middle of the keyboard. The ⇧ Shift is replaced by swiping up on keys and ← Backspace by swiping to the left on the keyboard. Diacritic characters can be accessed by holding on a key.
Alphabetical layout
A few companies offer "ABC" (alphabetical) layout keyboards.
The layout can also be useful for people who do not type often or where using both hands is not practical, such as touchscreens.
Chorded keyboards and mobile devices
Chorded keyboards, such as the Stenotype and Velotype, allow letters and words to be entered using combinations of keys in a single stroke. Users of stenotype machines regularly reach rates of 225 words per minute. These systems are commonly used for real-time transcription by court reporters and in live closed captioning systems. Ordinary keyboards may be adapted for this purpose using Plover. However, due to hardware constraints, chording three or more keys may not work as expected. Many high-end keyboards support n-key rollover and so do not have this limitation.
The multi-touch screens of mobile devices allow implementation of virtual on-screen chorded keyboards. Buttons are fewer, so they can be made larger. Symbols on the keys can be changed dynamically depending on what other keys are pressed, thus eliminating the need to memorize combos for characters and functions before use. For example, in the chorded GKOS keyboard which has been adapted for the Google Android, Apple iPhone, MS Windows Phone, and Intel MeeGo/Harmattan platforms, thumbs are used for chording by pressing one or two keys at the same time. The layout divides the keys into two separate pads which are positioned near the sides of the screen, while text appears in the middle. The most frequent letters have dedicated keys and do not require chording.
Some other layouts have also been designed specifically for use with mobile devices. The FITALY layout is optimised for use with a stylus by placing the most commonly used letters closest to the centre and thus minimising the distance travelled when entering words. A similar concept was followed to research and develop the MessagEase keyboard layout for fast text entry with stylus or finger. The ATOMIK layout, designed for stylus use, was developed by IBM using the Metropolis Algorithm to mathematically minimize the movement necessary to spell words in English. The ATOMIK keyboard layout is an alternative to QWERTY in ShapeWriter's WritingPad software. ASETNIOP is a keyboard layout designed for tablet computers that uses 10 input points, eight of them on the home row.
Other original layouts and layout design software
Several other alternative keyboard layouts have been designed either for use with specialist commercial keyboards (e.g. Maltron and PLUM) or by hobbyists (e.g. Asset, Arensito, Minimak, Norman, Qwpr, Workman as well as symmetric typing layouts Niro and Soul); however, none of them are in widespread use, and many of them are merely proofs of concept. Principles commonly used in their design include maximising use of the home row, minimising finger movement, maximising hand alternation or inward rolls (where successive letters are typed moving towards the centre of the keyboard), minimising changes from QWERTY to ease the learning curve, and so on.
Maltron also has a single-handed keyboard layout.
Programs such as the Microsoft Keyboard Layout Creator (basic editor, free, for use on MS Windows), SIL Ukelele (advanced editor, free, for use on Apple's Mac OS X),
KbdEdit (commercial editor, for Windows) and Keyman Developer (free, open source editor for Windows, macOS, iOS, Android, or for sites on the web as virtual keyboards) make it easy to create custom keyboard layouts for regular keyboards; users may satisfy their own typing patterns or specific needs by creating new ones from scratch (like the IPA or pan-Iberian
layouts) or modify existing ones (for example, the
Latin American Extended or
Gaelic
layouts). Such editors can also construct complex key sequences using dead keys or the AltGr key.
Certain virtual keyboards and keyboard layouts are accessible online. With no hardware limitations, those online keyboards can display custom layouts, or allow the user to pre-configure or try out different language layouts. Resulting text can then be pasted into other web sites or applications flexibly with no need to reprogram keyboard mappings at all.
Some high end keyboards allow users flexibility to reprogram keyboard mappings at the hardware level. For example, the Kinesis Advantage contoured keyboard allows for reprogramming single keys (not key combinations), as well as creating macros for remapping combinations of keys (this however includes more processing from the keyboard hardware, and can therefore be slightly slower, with a lag that may be noticed in daily use).
Non-QWERTY layouts were also used with specialized machines such as the 90-key Linotype type setting machine.
Keyboard layouts for non-Latin alphabetic scripts
Some keyboard layouts for non-Latin alphabetic scripts, most notably the Greek layout, are based on the QWERTY layout, in that glyphs are assigned as far as possible to keys that bear similar-sounding or appearing glyphs in QWERTY. This saves learning time for those familiar with QWERTY, and eases entry of Latin characters (with QWERTY) as well for Greek users.
This is not a general rule, and many non-Latin keyboard layouts have been invented from scratch.
All non-Latin computer keyboard layouts can also input Latin letters as well as the script of the language, for example, when typing in URLs or names. This may be done through a special key on the keyboard devoted to this task, or through some special combination of keys, or through software programs that do not interact with the keyboard much.
Brahmic scripts
Baybayin
It is possible to type baybayin directly from one's keyboard without the need to use web applications which implement an input method. The Philippines Unicode Keyboard Layout includes different sets of baybayin layout for different keyboard users: QWERTY, Capewell-Dvorak, Capewell-QWERF 2006, Colemak, and Dvorak, all of which work in both Microsoft Windows and Linux.
This keyboard layout with baybayin can be downloaded here.
Bengali
There are many different systems developed to type Bengali language characters using a typewriter or a computer keyboard and mobile device. There were efforts taken to standardize the input system for Bengali in Bangladesh (জাতীয় Jatiyo layout), but still no input method has still been effectively adopted widely.
Dhivehi
Dhivehi Keyboards have two layouts. Both are supported by Microsoft Windows (Windows XP and later only).
InScript
InScript is the standard keyboard for 12 Indian scripts including Devanagari, Bengali, Gujarati, Gurmukhi, Kannada, Malayalam, Oriya, Tamil, and Telugu etc.
Most Indian scripts are derived from Brahmi, therefore their alphabetic order is identical. On the basis of this property, the InScript keyboard layout scheme was prepared. So a person who knows InScript typing in one language can type in other scripts using dictation even without knowledge of that script.
An InScript keyboard is inbuilt in most modern operating systems including Windows, Linux, and Mac OS. It is also available in some mobile phones.
Khmer
Khmer uses its own layout designed to correspond, to the extent practicable, to its QWERTY counterpart, thus easing the learning curve in either direction. For example, the letter ល  [lɔː] is typed on the same key as the letter L on the English-based qwerty. It also has many specifics due to its record number of vowels, consonants and punctuation signs as well as its cluster structure which bundles letters together in one. 


Thai
The Thai Kedmanee keyboard layout predominates. The Thai Pattachote keyboard layout is also used, though it is much less common. Infrequently used characters are accessed via the Shift key. Despite their wide usage in Thai, Arabic numerals are not present on the main section of the keyboard. Instead they are accessed via the numeric keypad or by switching to the Latin character set on keyboards without dedicated numeric keys.
Lao
The keyboard layout used for Lao language.
Sinhala
The Sinhala keyboard layout is based on the Wijesekara typewriter for Sinhala script.
Tibetan (China)
The Chinese National Standard on Tibetan Keyboard Layout standardises a layout for the Tibetan language in China.
The first version of Microsoft Windows to support the Tibetan keyboard layout is MS Windows Vista. The layout has been available in Linux since September 2007.
Tibetan (International)
Mac OS-X introduced Tibetan Unicode support with OS-X version 10.5 and later, now with three different keyboard layouts available: Tibetan-Wylie, Tibetan QWERTY and Tibetan-Otani.
Dzongkha (Bhutan)
The Bhutanese Standard for a Dzongkha keyboard layout standardizes the layout for typing Dzongkha, and other languages using the Tibetan script, in Bhutan. This standard layout was formulated by the Dzongkha Development Commission and Department of Information Technology in Bhutan. The Dzongkha keyboard layout is very easy to learn as the key sequence essentially follows the order of letters in the Dzongkha and Tibetan alphabet. The layout has been available in Linux since 2004.
Inuktitut
Inuktitut has two similar, though not identical, commonly available keyboard layouts for Windows. Both contain a basic Latin layout in its base and shift states, with a few Latin characters in the AltGr shift states. The Canadian Aboriginal syllabics can be found in the Capslock and AltGr shift states in both layouts as well.
The difference between the two layouts lies in the use of ] as an alternate to AltGr to create the dotted, long vowel syllables, and the mapping of the small plain consonants to the Caps + number keys in the "Naqittaut" layout, while the "Latin" layout does not have access to the plain consonants, and can only access the long vowel syllables through the AltGr shift states.
Arabic
This layout was developed by Microsoft from the classic Arabic typewriter layout and is used by IBM PCs. There is also a 102-key variant and a 102-key phonetic variant that maps to AZERTY.
For Apple keyboards there is a different layout.
For Chrome a 1:1 layout also exists.
Hebrew
All keyboards in Israel are fitted with both Latin and Hebrew letters. Trilingual editions including either Arabic or Cyrillic also exist.
Note that in the standard layout (but not all keyboards), paired delimiters—parentheses (), brackets [], and braces {}, as well as less/greater than <>—are in the opposite order from the standard in other left-to-right languages. This results in "open"/"close" being consistent with right-to-left languages (Shift-9 always gives "close parenthesis" U+0029, which visually looks like "open parenthesis" in left-to-right languages). This is shared with Arabic keyboards.
Certain Hebrew layouts are extended with niqqud symbols (vowel points), which require Alt+Shift or similar key combination in order to be typed.
Tifinagh
The Royal institute of the Amazigh culture (IRCAM) developed a national standard Tifinagh layout for Tamazight (Berber) in Morocco. It is included in Linux and Windows 8, and is available from IRCAM for the Mac and older versions of Windows.
A compatible, international version of this layout, called "Tifinagh (International)" exists for typing a wide range of Tamazight (Berber) language variants, and includes support for Tuareg variants. It was designed by the Universal Amazigh Keyboard Project and is available from its page on SourceForge.
Urdu
Urdu has a standardized layout present, developed by the National Authority Language. More commonly, however, the phonetic keyboard is used on smartphones and desktops which align the Urdu letters with their Latin counterparts (for example, Pressing Q will write ق)
Another version of the keyboard, developed by Designer and Engineer Zeerak Ahmed, has witnessed an increase in usage among the younger generations. The keyboard, Matnsāz, is currently under development and available for beta testing in iOS.
Armenian
The Armenian language keyboard is similar to the Greek in that in most (but not all) cases, a given Armenian letter is at the same location as the corresponding Latin letter on the QWERTY keyboard. The illustrated keyboard layout can be enabled on Linux with: setxkbmap am -variant phonetic. Western and Eastern Armenian have different layouts.
In the pre-computer times Armenian keyboards had quite a different layout, more suitable for producing letter combinations inherent to the language.
Several attempts have been made to create innovative ergonomical layouts, some of them inspired by Dvorak.
Bulgarian
The current official Bulgarian keyboard layout for both typewriters and computer keyboards is described in BDS (Bulgarian State/National Standard) 5237:1978. It superseded the old standard, BDS 5237:1968, on 1 January 1978. Like the Dvorak layout, it has been designed to optimize typing speed and efficiency, placing the most common letters in the Bulgarian language—О, Н, Т, and А—under the strongest fingers. In addition to the standard 30 letters of the Bulgarian alphabet, the layout includes the non-Bulgarian Cyrillic symbols Э and ы and the Roman numerals I and V (the X is supposed to be represented by the Cyrillic capital Х, which is acceptable in typewriters but problematic in computers).
There is also a second, informal layout in widespread use—the so-called "phonetic" layout, in which Cyrillic letters are mapped to the QWERTY keys for Latin letters that "sound" or "look" the same, with several exceptions (Я is mapped to Q, Ж is mapped to V, etc.—see the layout and compare it to the standard QWERTY layout). This layout is available as an alternative to the BDS one in some operating systems, including Microsoft Windows, Apple Mac OS X and Ubuntu Linux. Normally, the layouts are set up so that the user can switch between Latin and Cyrillic script by pressing Shift + Alt, and between BDS and Phonetic by pressing Shift + Ctrl.
In 2006, Prof. Dimiter Skordev from the Faculty of Mathematics and Informatics of Sofia University and Dimitar Dobrev from the Bulgarian Academy of Sciences proposed a new standard, prBDS 5237:2006, including a revised version of the old BDS layout, which includes the letter Ѝ and the capital Ы and replaces the letters I and V with the currency symbols of $ and € respectively, and a standardization of the informal "phonetic" layout. After some controversy and a public discussion in 2008, the proposal was not accepted, although it had been already used in several places—the "Bulgarian Phonetic" layout in MS Windows Vista is based on it. There is a new "Bulgarian Phonetic" layout in MS Windows 7.
JCUKEN
The most common keyboard layout in modern Russia is the so-called Windows layout, which is the default Russian layout used in the MS Windows operating system. The layout was designed to be compatible with the hardware standard in many other countries, but introduced compromises to accommodate the larger alphabet. The full stop and comma symbols share a key, requiring the shift key to be held to produce a comma, despite the high relative frequency of comma in the language.
There are some other Russian keyboard layouts in use: in particular, the traditional Russian Typewriter layout (punctuation symbols are placed on numerical keys, one needs to press Shift to enter numbers) and the Russian DOS layout (similar to the Russian Typewriter layout with common punctuation symbols on numerical keys, but numbers are entered without Shift). The Russian Typewriter layout can be found on many Russian typewriters produced before the 1990s, and it is the default Russian keyboard layout in the OpenSolaris operating system.
Keyboards in Russia always have Cyrillic letters on the keytops as well as Latin letters. Usually Cyrillic and Latin letters are labeled with different colors.
Russian QWERTY/QWERTZ-based phonetic layouts
The Russian phonetic keyboard layout (also called homophonic or transliterated) is widely used outside Russia, where normally there are no Russian letters drawn on keyboard buttons. This layout is made for typists who are more familiar with other layouts, like the common English QWERTY keyboard, and follows the Greek and Armenian layouts in placing most letters at the corresponding Latin letter locations. It is famous among both native speakers and people who use, teach, or are learning Russian, and is recommended—along with the Standard Layout—by the linguists, translators, teachers and students of AATSEEL.org. The earliest known implementation of the Cyrillic-to-QWERTY homophonic keyboard was by former AATSEEL officer Constance Curtin between 1972 and 1976, for the PLATO education system's Russian Language curriculum developed at the University of Illinois at Urbana-Champaign. Curtin's design sought to map phonetically related Russian sounds to QWERTY keys, to map proximate phonetic and visual cues nearby one another, as well as to map unused positions in a mnemonically ideal way. Peter Zelchenko worked under Curtin at UIUC, and his later modifications to the number row for Windows and Macintosh keyboards follow Curtin's original design intent.
There are several different Russian phonetic layouts, for example YaZhERT (яжерт), YaWERT (яверт), and YaShERT (яшерт) suggested by AATSEEL.org and called "Student" layout. They are named after the first several letters that take over the 'QWERTY' row on the Latin keyboard. They differ by where a few of the letters are placed. For example, some have Cyrillic 'B' (which is pronounced 'V') on the Latin 'W' key (after the German transliteration of B), while others have it on the Latin 'V' key.
The images of AATSEEL "Student", YaZhERT (яжерт) and YaWERT (яверт) are shown on this page.
There are also variations within these variations; for example the Mac OS X Phonetic Russian layout is YaShERT but differs in placement of ж and э.
Windows 10 includes its own implementation of a mnemonic QWERTY-based input method for Russian, which does not fully rely on assigning a key to every Russian letter, but uses the sh, sc, ch, ya (ja), yu (ju), ye (je), yo (jo) combinations to input ш, щ, ч, я, ю, э, and ё respectively.
Virtual (on-screen) keyboards allow entering Cyrillic directly in a browser without activating the system layout. 
Serbian (Cyrillic)
Apart from a set of characters common to most Cyrillic alphabets, the Serbian Cyrillic layout uses six additional special characters unique or nearly unique to the Serbian Cyrillic alphabet: Љ, Њ, Ћ, Ђ, Џ, and Ј.
Due to the bialphabetic nature of the language, actual physical keyboards with the Serbian Cyrillic layout printed on the keys are uncommon today. Typical keyboards sold in Serbian-speaking markets are marked with Serbian Latin characters and used with both the Latin (QWERTZ) and Cyrillic layout configured in the software. What makes the two layouts this readily interchangeable is that the non-alphabetic keys are identical between them, and alphabetic keys always correspond directly to their counterparts (except the Latin letters Q, W, X, and Y that have no Cyrillic equivalents, and the Cyrillic letters Љ, Њ and Џ whose Latin counterparts are digraphs LJ, NJ and DŽ). This also makes the Serbian Cyrillic layout a rare example of a non-Latin layout based on QWERTZ.
The Macedonian dze is on this keyboard despite not being used in Serbian Cyrillic. The gje and kje can be typed by striking the apostrophe key then striking the G or K key.
There is also a dedicated Macedonian keyboard that is based on QWERTY (LjNjERTDz) and uses Alt Gr to type the dje and tshe. However, the capital forms are next to the small forms. An alternative version of the layout is quite different and has no dje or tshe access. This alternative was not supported until Windows Vista.
Ukrainian
Ukrainian keyboards, based on a slight modification of Russian Standard Layout, often also have the Russian Standard ("Windows") layout marked on them, making it easy to switch from one language to another. This keyboard layout had several problems, one of which was the omission of the letter Ґ, which does not exist in Russian. The other long-standing problem was the omission of the apostrophe, which is used in Ukrainian almost as commonly as in English (though with a different meaning), but which also does not exist in Russian. Both of these problems were resolved with the "improved Ukrainian" keyboard layout for Windows available with Vista and subsequent Windows versions.
There also exists an adapted keyboard for Westerners learning Ukrainian (mostly in the diaspora) which closely matches the qwerty keyboard, so that the letters either have the same sound or same shape, for example pressing the "v" on the Latin QWERTY produces the Cyrillic в (which makes roughly the same sound) and pressing the qwerty "w" key gives the Cyrillic ш (based on the similar shape). This is usually called a homophonic or phonetic layout.
Georgian


All keyboards in Georgia are fitted with both Latin and Georgian letters. As with the Armenian, Greek, and phonetic Russian layouts, most Georgian letters are on the same keys as their Latin equivalents. During the Soviet era, the Georgian alphabet was adapted to the Russian JCUKEN layout, mainly for typewriters. Soviet computers did not support Georgian keyboards. After the dissolution of the Soviet Union a large variety of computers were introduced to post-Soviet countries. The keyboards had QWERTY layout for Latin alphabet and JCUKEN for Cyrillic both printed on keys. Georgia started to adopt the QWERTY pattern. In both cases the letters which did not exist in the Cyrillic or Latin alphabets were substituted by letters that did not exist in Georgian alphabet. Today the most commonly used layout follows the QWERTY pattern with some changes.
Greek
The usual Greek layout follows the US layout for letters related to Latin letters (ABDEHIKLMNOPRSTXYZ, ΑΒΔΕΗΙΚΛΜΝΟΠΡΣΤΧΥΖ, respectively), substitutes phonetically similar letters (Φ at F; Γ at G) and uses the remaining slots for the remaining Greek letters: Ξ at J; Ψ at C; Ω at V; Θ at U).
Greek has two fewer letters than English, but has two diacritic marks which, because of their frequency, are placed on the home row at the U.K. ";" position; they are dead keys. Word-final sigma has its own position as well, replacing W, and semicolon (which is used as a question mark in Greek) and colon move to the position of Q.
The Greek Polytonic layout has various dead keys to input the accented letters. There is also the Greek 220 layout and the Greek 319 layout.
Cherokee
The Cherokee language uses an 86-character Syllabary. The keyboard is available for the iPhone and iPad and is supported by Google.
East Asian languages
The orthography used for Chinese, Japanese, and Korean ("CJK characters") require special input methods, due to the thousands of possible characters in these languages. Various methods have been invented to fit every possibility into a QWERTY keyboard, so East Asian keyboards are essentially the same as those in other countries. However, their input methods are considerably more complex, without one-to-one mappings between keys and characters.
In general, the range of possibilities is first narrowed down (often by entering the desired character's pronunciation). Then, if there remains more than one possibility, the desired ideogram is selected, either by typing the number before the character, or using a graphical menu to select it. The computer assists the typist by using heuristics to guess which character is most likely desired. Although this may seem painstaking, East Asian input methods are today sufficient in that, even for beginners, typing in these languages is only slightly slower than typing an alphabetic language like English (where each phoneme is represented by one grapheme).
In Japanese, the QWERTY-based JIS keyboard layout is used, and the pronunciation of each character is entered using various approximations to Hepburn romanization or Kunrei-shiki romanization. There are several kana-based typing methods. .
Of the three, Chinese has the most varied input options. Characters can either be entered by pronunciation (like Japanese and Hanja in Korean), or by structure. Most of the structural methods are very difficult to learn but extremely efficient for experienced typists, as there is no need to select characters from a menu.
There exist a variety of other, slower methods in which a character may be entered. If the pronunciation of a character is not known, the selection can be narrowed down by giving its component shapes, radicals, and stroke count. Also, many input systems include a "drawing pad" permitting "handwriting" of a character using a mouse. Finally, if the computer does not have CJK software installed, it may be possible to enter a character directly through its encoding number (e.g., Unicode).
In contrast to Chinese and Japanese, Korean is typed similarly to Western languages. There exist two major forms of keyboard layouts: Dubeolsik (두벌식), and Sebeolsik (세벌식). Dubeolsik, which shares its symbol layout with the QWERTY keyboard, is much more commonly used. While Korean consonants and vowels (jamo) are grouped together into syllabic grids when written, the script is essentially alphabetical, and therefore typing in Korean is quite simple for those who understand the Korean alphabet Hangul. Each jamo is assigned to a single key. As the user types letters, the computer automatically groups them into syllabic characters. Given a sequence of jamo, there is only one unambiguous way letters can be validly grouped into syllables, so the computer groups them together as the user types.
Hangul (for Korean)
Pressing the Han/Eng(한/영) key once switches between Hangul as shown, and QWERTY. There is another key to the left of the space bar for Hanja(한자 or 漢字) input. If using an ordinary keyboard without the two extra keys, the right Alt key will become the Ha/En key, and the right Ctrl key will become the Hanja key. Apple Keyboards do not have the two extra keys.
Dubeolsik
Dubeolsik (두벌식; 2-set) is by far the most common and the sole national standard of Hangul keyboard layout in use in South Korea since 1969. Consonants occupy the left side of the layout, while vowels are on the right.
Sebeolsik 390
Sebeolsik 390 (세벌식 390; 3-set 390) was released in 1990. It is based on Dr. Kong Byung Woo's earlier work. This layout is notable for its compatibility with the QWERTY layout; almost all QWERTY symbols that are not alphanumeric are available in Hangul mode. Numbers are placed in three rows. Syllable-initial consonants are on the right (shown green in the picture), and syllable-final consonants and consonant clusters are on the left (shown red). Some consonant clusters are not printed on the keyboard; the user has to press multiple consonant keys to input some consonant clusters, unlike Sebeolsik Final. It is more ergonomic than the dubeolsik, but is not in wide use.
Sebeolsik Final
Sebeolsik Final (세벌식 최종; 3-set Final) is another Hangul keyboard layout in use in South Korea. It is the final Sebulsik layout designed by Dr. Kong Byung woo, hence the name. Numbers are placed on two rows. Syllable-initial consonants are on the right, and syllable-final consonants and consonant clusters are on the left. Vowels are in the middle. All consonant clusters are available on the keyboard, unlike the Sebeolsik 390 which does not include all of them. It is more ergonomic than the dubeolsik, but is not in wide use.
Sebeolsik Noshift
Sebeolsik Noshift is a variant of sebeolsik which can be used without pressing the shift key. Its advantage is that people with disabilities who cannot press two keys at the same time will still be able to use it to type in Hangul.
Chinese
Chinese keyboards are usually in US layout with/without Chinese input method labels printed on keys. Without an input method handler activated, these keyboards would simply respond to Latin characters as physically labelled, provided that the US keyboard layout is selected correctly in the operating system. Most modern input methods allow input of both simplified and traditional characters, and will simply default to one or the other based on the locale setting.
People's Republic of China
Keyboards used in the People's Republic of China are standard or slightly modified English US (QWERTY) ones without extra labelling, while various IMEs are employed to input Chinese characters. The most common IMEs are Hanyu pinyin-based, representing the pronunciation of characters using Latin letters. However, keyboards with labels for alternative structural input methods such as Wubi method can also be found, although those are usually very old products and are extremely rare, as of 2015.
Taiwan
Computers in Taiwan often use Zhuyin (bopomofo) style keyboards (US keyboards with bopomofo labels), many also with Cangjie method key labels, as Cangjie is a popular method for typing in Traditional Chinese. The bopomofo style keyboards are in lexicographical order, top-to-bottom left-to-right.
The codes of three input methods are typically printed on the Chinese (traditional) keyboard: Zhuyin (upper right); Cangjie (lower left); and Dayi (lower right).
Hong Kong and Macau
In Hong Kong, both Chinese (Taiwan) and US keyboards are found. Japanese keyboards are occasionally found, and UK keyboards are rare.
For Chinese input, Shape-based input methods such as Cangjie (pronounced cong1 kit3 in Cantonese) or Chinese handwriting recognition are the most common input method. The use of phonetic-based input method is uncommon due to the lack of official standard for Cantonese romanisation and people in Hong Kong almost never learn any romanisation schemes in schools. An advantage of phonetic-based input method is that most Cantonese speakers are able to input Traditional Chinese characters with no particular training at all where they spell out the Cantonese sound of each character without tone marks, e.g. 'heung gong' for 香港(Cantonese Yale: Hēung góng; Hong Kong) and to choose the characters from a list. However, Microsoft Windows, which is the most popular operating system used in desktops, does not provide any Cantonese phonetic input method, requiring users to find and install third-party input method software. Also, most people find the process of picking characters from a list being too slow due to homonyms so the Cangjie method is generally preferred.
Although thorough training and practice are required to use Cangjie, many Cantonese speakers have taken Cangjie input courses because of the fast typing speed availed by the input method. This method is the fastest because it has the capability to fetch the exact, unambiguous Chinese character which the user has in mind to input, pinpointing to only one character in most cases. This is also the reason why no provision for an input of phonetic accent is needed to complement this Input Method. The Cangjie character feature is available on both Mac OS X and Windows. On Mac OS X, handwriting recognition input method is bundled with the OS.
Macau utilizes the same layouts as Hong Kong, with the addition of the Portuguese layout used in Portugal.
Japanese
The JIS standard layout includes Japanese kana in addition to a QWERTY style layout. The shifted values of many keys (digits, together with :* ; + - =) are a legacy of bit-paired keyboards, dating to ASCII telex machines and terminals of the 1960s and 1970s.
For entering Japanese, the most common method is entering text phonetically, as romanized (transliterated) kana, which are then converted to kanji as appropriate by an input method editor. It is also possible to type kana directly, depending on the mode used. To type たかはし, "Takahashi", a Japanese name, one could type either TAKAHAS(H)I in Romanized (Rōmaji) input mode, or QTFD in kana input mode. Then the user can proceed to the conversion step to convert the input into the appropriate kanji.
The extra keys in the bottom row (muhenkan, henkan, and the Hiragana/Katakana switch key), and the special keys in the leftmost column (the hankaku/zenkaku key at the upper left corner, and the eisū key at the Caps Lock position), control various aspects of the conversion process and select different modes of input.
The Oyayubi Shifuto (Thumb Shift) layout is based on kana input, but uses two modifying keys replacing the space bar. When a key is pressed simultaneously with one of the keys, it yields another letter. Letters with the "dakuten" diacritic are typed with the opposite side "thumb shift". Letters with "handakuten" are either typed while the conventional pinky-operated shift key is pressed (that is, each key corresponds to a maximum of 4 letters), or, on the "NICOLA" variation, on a key which does not have a dakuten counterpart.
The H key in the QWERTY layout individually yields は, but with the 変換 (R Thumb Shift) key, yields み. Simultaneous input with 無変換 (L Thumb Shift) yields ば, which is the individually mapped letter with the aforementioned dakuten. While the pinky-operated ⇧ Shift key is pressed, the same key yields ぱ. (This same letter must be typed with 無変換(L Thumb Shift) + Y on the NICOLA variant.)
Layout changing software
The character code produced by any key press is determined by the keyboard driver software. A key press generates a scancode which is interpreted as an alphanumeric character or control function. Depending on operating systems, various application programs are available to create, add and switch among keyboard layouts. Many programs are available, some of which are language specific.
The arrangement of symbols of specific language can be customized. An existing keyboard layout can be edited, and a new layout can be created using this type of software.
For example, Ukelele [sic] for Mac, AutoHotkey or The Microsoft Keyboard Layout Creator for Windows, and open-source Avro Keyboard provide the ability to customize the keyboard layout as desired.
See also
Notes