Level (video games)
In video games, a level (also referred to as a map, stage, or round in some older games) is any space available to the player during the course of completion of an objective. Video game levels generally have progressively-increasing difficulty to appeal to players with different skill levels. Each level may present new concepts and challenges to keep a player's interest high.
In games with linear progression, levels are areas of a larger world, such as Green Hill Zone. Games may also feature interconnected levels, representing locations. Although the challenge in a game is often to defeat some sort of character, levels are sometimes designed with a movement challenge, such as a jumping puzzle, a form of obstacle course. Players must judge the distance between platforms or ledges and safely jump between them to reach the next area. These puzzles can slow the momentum down for players of fast action games; the first Half-Life's penultimate chapter, "Interloper", featured multiple moving platforms high in the air with enemies firing at the player from all sides.
Level design
Level design or environment design, is a discipline of game development involving the making of video game levels—locales, stages or missions. This is commonly done using a level editor, a game development software designed for building levels; however, some games feature built-in level editing tools.
History
In the early days of video games (1970s-2000s), a single programmer would develop the maps and layouts for a game, and a discipline or profession dedicated solely to level design did not exist. Early games often featured a level system of ascending difficulty as opposed to progression of storyline. An example of the former approach is the arcade shoot 'em up game Space Invaders (1978), where each level looks the same, repeating endlessly until the player loses all their lives. An example of the latter approach is the arcade platform game Donkey Kong (1981), which uses multiple distinct levels to progress a storyline; as Mario (originally called Jumpman) tries to rescue Pauline from Donkey Kong, each level ends with Kong fleeing with Pauline and then Mario having to complete a different level each time, until he finally confronts Kong.
1983's Lode Runner was one of the first titles to ship with a level editor. Its designer, Doug Smith, reputedly paid neighborhood children to design levels for the game. The same year, the multiplayer dungeon crawl Dandy was released, and it also shipped with a level editor which was documented in the manual. ZZT (1991) is a later game with user-accessible mapping and scripting.
A game genre that required significant amounts of time to design areas were text-based games, such as MUDs. Often, promoted users were assigned to make new paths, new rooms, new equipment, and new actions, often using the game interface itself.
Doom (1993) and Doom II (1994) were two of the first games to attract focused game modding activity, and many WAD level files were made for them. One of the reasons was a clear separation between the level files and game engine itself. Half-Life, Quake 3, and many other games have notable mapping tools and communities focusing on user-generated content. 
Process
Level design for each individual level in a modern game typically starts with concept art, sketches, renderings, and physical models. Once completed, these concepts transform into extensive documentation, environment modeling, and the placing of game specific entities (actors), usually with the aid of a level editor.
A level editor may be distributed as a complete stand-alone package, at times, rivaling commercial 3D modelling software. There are various steps involved in laying out a map and these steps may vary dramatically across the many different game genres that exist as of the 2020s.
General steps include:
The first level of the game is usually designed to get players to explore the mechanics of the game, notably in World 1-1 of Super Mario Bros.
Cut scenes may be triggered by events in a level, but require distinctly different skills, and may be produced by a different person or team.
The level design process may be iterated several times before achieving the desired outcome.
Level designers and concept artists may also be required to provide a pre-rendered map of the level (or entire game world) for the player.
Design goals
Level design is necessary for two primary purposes: providing players with a goal and providing players with enjoyable play experience. Good level design strives to produce quality gameplay, provide an immersive experience, and sometimes, especially in story-based games, to advance the storyline. Skilled use of textures and audio is necessary to produce immersive player experience.
Player directing
Levels are generally constructed with flow control in mind; that is, directing the player towards the goal of the level and preventing confusion and idling. This can be accomplished by various means.
Often the level layouts feature power-ups and items positioned so that collecting them inevitably makes the player move in the correct direction. This is one of the basic player direction techniques and is most often seen in platformers.
Lighting and illumination, as well as distinctly-coloured objects, are often used to unambiguously guide the player towards the correct path. Similarly, clearly marked choke-points can be introduced.
Another method is strategic placement of obstacles and aesthetic environment props that direct the player's attention to "clear" paths instead. This is often used in closed, "stuffed" environments.
Levels may be designed to force the players to explore the map and advance. Most Real-Time Strategy maps give each player a starting base, but will have resource distribution and terrain features designed to draw players out of their base and engage each other. Teamplay maps can provide noticeable advantages to one team over another, when designed poorly.
Level streaming
Common on older hardware, most games would load a single level and all of its assets at one time, and when the player completed the level, the next level would be loaded. The player would be presented with a loading screen while the game loaded level information from storage. With more advanced computing hardware with faster input/output data transfer rates, such as optical drives, hard disk drives (HDDs), solid-state drives (SSDs), and larger amounts of memory, game developers have been able to take advantage of continuously loading new level assets – models, textures, and audio – into the computer or console's memory as the player approaches the edge of one level and the start of a new one. This can effectively make the transition from one level to another level appear to be seamless and avoid the use of loading screens. This is known as level streaming or in-game streaming, and is often used for open world games to give the perception of a fully-interconnected space. There are often tricks used to give the computer hardware sufficient time to load the assets for the next area. The player's speed may be reduced, while story cues are presented to draw the player's attention. The player may be required to enter areas in which their view of the world is plausibly restricted, sometimes referred to as "loading tunnels". With newer consoles, such as the PlayStation 5 and Xbox Series X and Series S, special SSDs arrays alongside software libraries that have a total high data throughput can eliminate the need for any loading tunnels in a seamless world game.
Level designer
A level designer is a game designer who makes environments and scenarios using a level editor and other tools. Level designers will usually work on a level from pre-production to completion – working with both incomplete and complete versions of the game. Video game programmers usually produce level editors and design tools for the designers to use. This eliminates the need for designers to access or modify game code. As opposed to the level editing tools sometimes available to the community, level designers often work with placeholders and prototypes aiming for level consistency and clear layout before required artwork is produced by game artists. Many level designers have skills as both a visual artist and game designer, although in recent years the responsibility for visual-, structural- and gameplay-related tasks has been increasingly divided among several specialists.
Level creation tools
A wide variety of tools may be used by someone designing and making a level. Although it is faster to design models and textures with general-purpose multimedia development tools, games usually require the data to be in a unique format suited for that game's engine. For this, specific compilers and converters of models, textures, and audio data may be required to lay out a level.
Sometimes, professional 3D editing software, such as 3D Studio Max, Blender, AutoCAD, Lightwave, Maya, Softimage XSI or Grome is used, usually customized with a special plugin developed for the specific game.
Level editor
A level editor (also known as a map, campaign or scenario editor) is a game development tool used to design levels, maps, campaigns and virtual worlds for a video game. An individual involved with the development of game levels is a level designer or mapper. 
In some cases, the developer of a video game includes built-in level editing tools; for example, a track editor for a racing game. Other times they may release an official level editor for the game as a separate application. Sometimes players of the game develop fan-made level editors.
One of the first 3D games which became popular partially due to level editors and fan-made maps, other game addons, and other works related to the game, was Doom. The development of various third-party editors led to the formation of an online community trading fan-made maps.
A level editor is often limited to designing levels for only a certain game engine. Developing a level editor takes a lot of time; it is more time- and cost-efficient to release multiple games using the same engine instead of developing a new engine and level editor for each game. As level editors generally allow for limited game-development work, to make larger changes to a game than simply adding new levels, a software development kit (SDK) is sometimes needed.
Construction set
In the early years of video-gaming, some games came with a utility called a "construction set". This was similar in many ways to a level editor. Some games used them to make extra levels, whereas others (like the Shoot-'Em-Up Construction Kit) used them as a means to develop a game rather than be a game in itself.
Gameplay alteration
Maps' design can significantly impact the gameplay. For example, the gameplay may be shifted towards a platformer (by careful placement of platforms) or a puzzle game (by extensive use of buttons, keys, and doors). Some FPS maps may be designed to prevent sniping by not including any long hallways, while other maps may allow for a mix of sniping and closer combat.
Gimmick maps are sometimes developed to explore selected features of gameplay, such as sniping or fist fighting. While they are briefly useful to level designers and interesting to experienced players, they are usually not included in final list of levels of the game because of their limited replay value.
Minigame
A minigame (also spelled mini-game or mini game, sometimes called a subgame or microgame) is a short video game often contained within another video game, and sometimes in application software or on a display of any form of hardware. A minigame contains different gameplay elements than the main game, may be optional, and is often smaller or more simplistic than the game in which it is contained. Minigames are sometimes also offered separately for free to promote the main game. Some minigames can also be bonus stages or secret levels. They are distinguishable from levels in that a level is an environment bound to a set of mechanics and rules that all defines all other normal levels in a game, whereas a minigame can use different rules and playstyles but may not necessarily be set in a different environment.
Hidden features
Level designers sometimes make hidden rooms and areas that usually require more effort for the player to reach or to notice. These usually give some additional rewards, such as ammo or powerups. They serve to induce players to explore. Sometimes, they serve as easter eggs, containing messages such as the level designers' names or pictures, or political or humorous messages. One of the first games with a 3D engine to feature hidden features was Wolfenstein 3D, where certain walls could be pushed to reveal hidden passages.
Sometimes, a whole level may be designed as a secret level.
Bonus stage
A bonus stage (also known as a bonus level or bonus round) is a special level within a video game designed to reward the player or players, and typically allows the player to collect extra points or power-ups. Bonus stage either have no enemies or hazards, or replace the normal penalties for being struck by enemies or hazards with simply being thrown out of the bonus stage. Many bonus stages need to be activated or discovered in some manner, or certain conditions must be satisfied to access them. Otherwise, they appear after the player has completed a certain number of regular stages.
Level bugs
There are many map bugs that level designers try to avoid, but sometimes go unnoticed for some time.
A player might get stuck in map geometry with no way to escape or to die. A player might be able to find a specific spot where they do not have to move to gain experience, because monsters are constantly spawned but can be easily and immediately killed. In multiplayer maps, a player may be able to reach areas of the map designed to be inaccessible; for example, reaching an advantageous rooftop position and camping other players. A player might be able to fall out-of-bounds of a map where other players cannot reach them. Invisible walls are cited to be level design bugs, and might be "left-over geometry" from an earlier version of the level or an object's improperly aligned "collision box".
In some cases, specific mapping tools can be designed to automatically detect problems such as falling "outside" a level, and reaching "stuck" areas. Careful level designers run these tools as the last step before releasing a new version of a level. In most cases, the best way to improve a map is by playtesting it with experienced players, and allowing them to try to exploit any problems.
Notable levels
See also
Sources